% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cl_GetData.R
\name{cl_GetData}
\alias{cl_GetData}
\title{Get Data}
\usage{
cl_GetData(lon, lat, what = c("depth", "area", "par", "kdpar",
  "parbottom"), dirdata = "CoastalLight.d", month = 0)
}
\arguments{
\item{lon}{: [numeric] longitude, vector of length 1 or 2,
         (interval [-180; 180], and see details)
; unit : \eqn{decimal \, degree}}

\item{lat}{: [numeric] latitude, vector of length 1 or 2,
         (interval [-90; 90], and see details)
; unit : \eqn{decimal \, degree}}

\item{what}{: [character] a vector of the variables to extract among
          "depth", "area", "par", "kdpar" and "parbottom". 
          Several variables can be listed. Default is all of them.
          Note that longitude and latitude are automatically added to the variables.
          Units : 
depth (\eqn{m}),
area (\eqn{km^{2}}),
par, parbottom (\eqn{mol.photons \; m^{-2} \; d^{-1}}),
kdpar (\eqn{m^{-1}}).}

\item{dirdata}{: [character] The directory where the data files
(previouly downloaded with the function \code{cl_DownloadData()})
are stored. (default = "./CoastalLight.d");}

\item{month}{: [integer] : the decimal value of the month ([0-12] of interest. 0 indicate
the climatology over 21 years (1998-2018), 1 is January, ...}
}
\value{
: [list] a list with 4 components :
          \itemize{
             \item \code{type} : the type of geographical zone :
                          "Point", "LonTransect", "LatTransect" or "Area"
             \item \code{lon} : the lon argument as passed to the function
             \item \code{lat} : the lat argument as passed to the function
             \item \code{data} : a matrix of data with columns names "longitude", "latitude",
                         and variables requested. 
          }
}
\description{
This function gets (geographic and optical) data for a geographic zone. Such a zone may be a
single geographic point, a longitudinal transect, a latitudinal transect, or an area. 
The type of geographic zone depends the arguments \code{lon} and \code{lat}
passed to the function (see details)
}
\details{
There are 4 options for parameters \code{lon} and \code{lat}:
  \itemize{
    \item \code{lon} is of length 1, \code{lat} is of length 1 : the type is "Point"
    \item \code{lon} is of length 2, \code{lat} is of length 1 : the type is "LonTransect"
    \item \code{lon} is of length 1, \code{lat} is of length 2 : the type is "LatTransect"
    \item \code{lon} is of length 2, \code{lat} is of length 2 : the type is "Area"
  }
To get data along an ordinary transect (i.e. a polygonal line, given by its vertices)
you have, in a first time, to get data in an "Area" containing this polygonal line,
and, in a second time, to use function \code{cl_Transect()} in order to extract data along the transect
(see example of this function).
}
\examples{

## All examples assume that data have been downloaded in directory "CoastalLight.d"
## with function cl_DownloadData()

## Area
gabes <- cl_GetData(lon = c(10, 14), lat = c(32.5, 36), dir = "./CoastalLight.d")
par(mfrow = c(3,2))
cl_PlotData(gabes)

## a longitudinal transect in January
long.transect <- cl_GetData(lon = c(10, 14), lat = c(34), dir = "./CoastalLight.d", month = 1)
par(mfrow = c(1,1))
cl_PlotData(long.transect)

## a latitudinal transect in August
lat.transect <- cl_GetData(lon = c(12), lat = c(32.5, 36), dir = "./CoastalLight.d", month = 8)
par(mfrow = c(1,1))
cl_PlotData(lat.transect)
}
